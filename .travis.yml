sudo: required

dist: xenial

language: python
python:
  - "3.7"

env:
  global:
    - PIPENV_VENV_IN_PROJECT=1
    - PIPENV_IGNORE_VIRTUALENVS=1

stages:
  - name: test
    if: type = push
  - name: develop
    if: branch = develop AND type = push
  - name: production
    if: branch = master AND type = push

jobs:
  include:
    - stage: test
      before_install:
        - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.16/terraform_0.12.16_linux_amd64.zip
        - unzip /tmp/terraform.zip -d /tmp
        - mv /tmp/terraform ~/bin
        - export PATH="~/bin:$PATH"
      install: make travis-env
      services:
        - docker
      script:
        - make test
        - make code-style
      after_success:
        - codecov

    - stage: develop
      install: make travis-aws
      services:
        - docker
      script:
        - make aws-push-image
        - make thumbnail-lambda
        - make rekognition-lambda

    - stage: production
      before_install:
        - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.16/terraform_0.12.16_linux_amd64.zip
        - unzip /tmp/terraform.zip -d /tmp
        - mv /tmp/terraform ~/bin
        - curl https://github.com/gruntwork-io/terragrunt/releases/download/v0.20.4/terragrunt_linux_amd64 -o terragrunt
        - chmod 755 teragrunt
        - mv terragrunt ~/bin
        - export PATH="~/bin:$PATH"
      install: make travis-env
      services:
        - docker
      script:
        - make aws-update-service
        - make thumbnail-lambda
        - make rekognition-lambda
        - make aws-update-lambda
